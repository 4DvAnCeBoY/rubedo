<project name="rubedo" default="main" basedir=".">
    <!-- By default, set rights on applications folders -->
    <target name="main" depends="build"></target>

    <!-- Use the prepare-cache action -->
    <target name="set-rights" depends="prepare-cache"></target>

    <!-- Launch test suit for the Rubedo core -->
    <target name="phpunit">
        <exec
                command="${project.basedir}/vendor/bin/phpunit  --colors --configuration ${project.basedir}/module/Rubedo/test/phpunit.xml"
                dir="${project.basedir}/module/Rubedo/test"
                passthru="true"
                />
    </target>

    <!-- Launch test suit for the Rubedo API -->
    <target name="phpunit-api">
        <exec
                command="${project.basedir}/vendor/bin/phpunit  --colors --configuration ${project.basedir}/module/RubedoAPI/test/phpunit.xml.dist"
                dir="${project.basedir}/module/RubedoAPI/test"
                passthru="true"
                />
    </target>

    <!-- Launch the OLD test suit for the Rubedo core -->
    <target name="phpunit-ci">
        <exec
                command="${project.basedir}/vendor/bin/phpunit  --colors --configuration ${project.basedir}/tests/phpunit-ci.xml"
                dir="${project.basedir}/tests"
                passthru="true"
                />
    </target>

    <!-- Launch all the application for the continuous integration -->
    <target name="build" depends="prepare-build,lint,pdepend,phpcs-ci"></target>
    <!-- <target name="build" depends="prepare-build,lint,phploc,pdepend,phpcpd,phpmd-ci,phpcs-ci,phpdoc"></target> -->

    <!--*********************************************************************
    ************ All actions for folders and rights *************************
    **********************************************************************-->

    <!-- Create dirs for the cache and set rights -->
    <target name="prepare-cache" depends="">
        <mkdir dir="${project.basedir}/cache"/>
        <mkdir dir="${project.basedir}/cache/htmlpurifier"/>
        <mkdir dir="${project.basedir}/cache/zend"/>
        <mkdir dir="${project.basedir}/cache/config"/>
        <mkdir dir="${project.basedir}/cache/images"/>
        <mkdir dir="${project.basedir}/log"/>
        <mkdir dir="${project.basedir}/public/captcha"/>
        <mkdir dir="${project.basedir}/public/theme"/>
        <mkdir dir="${project.basedir}/public/generate-image"/>

        <chmod file="${project.basedir}/cache" mode="777"/>
        <chmod file="${project.basedir}/cache/htmlpurifier" mode="777"/>
        <chmod file="${project.basedir}/cache/zend" mode="777"/>
        <chmod file="${project.basedir}/cache/config" mode="777"/>
        <chmod file="${project.basedir}/cache/images" mode="777"/>
        <chmod file="${project.basedir}/log" mode="777"/>
        <chmod file="${project.basedir}/config/autoload" mode="777"/>
        <chmod file="${project.basedir}/public/captcha" mode="777"/>
        <chmod file="${project.basedir}/public/theme" mode="777"/>
        <chmod file="${project.basedir}/public/generate-image" mode="777"/>
    </target>

    <!-- Delete all cache dirs -->
    <target name="clean-cache" description="Cleanup cache Folder">
        <delete dir="${project.basedir}/cache"/>
    </target>

    <!-- Delete build dirs -->
    <target name="clean-build" description="Cleanup build artifacts">
        <delete dir="${project.basedir}/build"/>
        <delete dir="${project.basedir}/build/api"/>
        <delete dir="${project.basedir}/build/code-browser"/>
        <delete dir="${project.basedir}/build/coverage"/>
        <delete dir="${project.basedir}/build/logs"/>
        <delete dir="${project.basedir}/build/pdepend"/>
        <delete dir="${project.basedir}/build/phpdoc"/>
    </target>

    <!-- Create build dirs -->
    <target name="prepare-build" depends="clean-build" description="Prepare for build">
        <mkdir dir="${project.basedir}/build"/>
        <mkdir dir="${project.basedir}/build/api"/>
        <mkdir dir="${project.basedir}/build/code-browser"/>
        <mkdir dir="${project.basedir}/build/coverage"/>
        <mkdir dir="${project.basedir}/build/logs"/>
        <mkdir dir="${project.basedir}/build/pdepend"/>
        <mkdir dir="${project.basedir}/build/phpdoc"/>
    </target>

    <!--*********************************************************************
    ************ All actions for the continuous integration *****************
    **********************************************************************-->

    <!-- Check syntax of all *.php files in Rubedo core -->
    <target name="lint" description="Perform syntax check of sourcecode files">
        <apply executable="php" failonerror="true">
            <arg value="-l"/>
            <fileset dir="${project.basedir}/module/Rubedo">
                <include name="**/*.php"/>
            </fileset>
        </apply>
    </target>

    <!-- Determine the project size
    <target name="phploc" description="Measure project size using PHPLOC">
        <exec executable="phploc">
            <arg value="-log-csv"/> log-csv need 2 -
            <arg value="${project.basedir}/build/logs/phploc.csv"/>
            <arg value="${project.basedir}/module/Rubedo"/>
        </exec>
    </target> -->

    <!-- Calculate software metrics using PHP_Depend -->
    <target name="pdepend" description="Calculate software metrics using PHP_Depend">
        <exec executable="${project.basedir}/vendor/bin/pdepend">
            <arg value="--jdepend-xml=${project.basedir}/build/logs/jdepend.xml"/>
            <arg value="--jdepend-chart=${project.basedir}/build/pdepend/dependencies.svg"/>
            <arg value="--overview-pyramid=${project.basedir}/build/pdepend/overview-pyramid.svg"/>
            <arg path="${project.basedir}/module/Rubedo"/>
        </exec>
    </target>

    <!-- Perform project mess detection using PHPMD and print human readable output
    <target name="phpmd"
            description="Perform project mess detection using PHPMD and print human readable output. ">
        <exec executable="${project.basedir}/vendor/bin/phpmd" passthru="true">
            <arg path="${project.basedir}/module/Rubedo"/>
            <arg value="text"/>
            <arg value="design,unusedcode"/>

        </exec>
    </target> -->

    <!-- Perform project mess detection using PHPMD
    <target name="phpmd-ci"
            description="Perform project mess detection using PHPMD. ">
        <exec executable="${project.basedir}/vendor/bin/phpmd">
            <arg path="${project.basedir}/module/Rubedo"/>
            <arg value="xml"/>
            <arg value="design,unusedcode"/>
            <arg value="-reportfile"/> reportfile need 2 - at the begening
            <arg value="${project.basedir}/build/logs/pmd.xml"/>
        </exec>
    </target> -->

    <!-- Check if the source code respects the PSR2 standards
    <target name="phpcs"
            description="Find coding standard violations using PHP_CodeSniffer and print human readable output. Intended for usage on the command line before committing.">
        <exec executable="${project.basedir}/vendor/bin/phpcs" passthru="true">
            <arg value="-standard=PSR2"/> standard need 2 - at the begening
            <arg path="${project.basedir}/module/Rubedo"/>
        </exec>
    </target> -->

    <!-- Check if the source code respects the PSR2 standards -->
    <target name="phpcs-ci"
            description="Find coding standard violations using PHP_CodeSniffer creating a log file for the continuous integration server">
        <exec executable="${project.basedir}/vendor/bin/phpcs" output="/dev/null">
            <arg value="--report=checkstyle"/>
            <arg value="--report-file=${project.basedir}/build/logs/checkstyle.xml"/>
            <arg value="--standard=PSR2"/>
            <arg path="${project.basedir}/module/Rubedo"/>
        </exec>
    </target>

    <!-- Find duplicate code using PHPCPD
    <target name="phpcpd" description="Find duplicate code using PHPCPD">
        <exec executable="phpcpd">
            <arg value="-log-pmd"/> log-pmd need 2 - at the begening
            <arg value="${project.basedir}/build/logs/pmd-cpd.xml"/>
            <arg path="${project.basedir}/module/Rubedo"/>
        </exec>
    </target> -->

    <!-- Build PHPdoc
    <target name="phpdoc" description="Build PHPdoc">
        <exec executable="phpdoc">
        </exec>
    </target> -->
</project>
