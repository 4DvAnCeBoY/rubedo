{% extends "root/blocks/contentlist.html.twig" %} 
{% block mainContent %}

{% if blockConfig.activateSearch %}
<div id="activeFacetBox">
</div>
{% endif %}

<div class="row-fluid">
    
	{% if blockConfig.activateSearch %}
	<div class="span3 well well-large" id="facetBox">
	</div>
	<div class="span9">
	   {% if blockConfig.showPlacesSearch %}
	   <div id="{{prefix}}holderpanel">
          <input id="{{prefix}}target" type="text" placeholder="{{ "Blocks.GeoSearch.Label.Address" | fotrans }}">
        </div>
        {% endif %}
        <div id="{{prefix}}map_canvas" style="height:{{blockConfig.height}}px;" class="row-fluid"></div>
		
	</div>
	{% else %}
	<div class="span12">
	   {% if blockConfig.showPlacesSearch %}
    	<div id="{{prefix}}holderpanel">
          <input id="{{prefix}}target" type="text" placeholder="{{ "Blocks.GeoSearch.Label.Address" | fotrans }}">
        </div>
        {% endif %}
		<div id="{{prefix}}map_canvas" style="height:{{blockConfig.height}}px;" class="row-fluid"></div>
	</div>
	{% endif %}
</div>
<script type="text/javascript"
      src="https://maps.googleapis.com/maps/api/js?key={{ googleMapsKey }}&amp;libraries=places&amp;sensor=true&amp;language={{ lang }}">
    </script>
    <script type="text/javascript"
      src="http://google-maps-utility-library-v3.googlecode.com/svn/tags/markerclustererplus/2.0.9/src/markerclusterer_packed.js">
    </script>
    <script type="text/javascript"
      src="http://google-maps-utility-library-v3.googlecode.com/svn/tags/markerwithlabel/1.1.8/src/markerwithlabel_packed.js">
    </script>
    
<script type="text/javascript">
      function initialize() {
    
          
        var mapOptions = {
          center: new google.maps.LatLng(48.8567, 2.3508),
          zoom: {{blockConfig.zoom}}||12,
          mapTypeId: google.maps.MapTypeId.ROADMAP
        };
        
      
      var map = new google.maps.Map(document.getElementById("{{prefix}}map_canvas"),
            mapOptions);
      var geocoder = new google.maps.Geocoder();
      {% if blockConfig.showPlacesSearch %}
          var input = /** @type {HTMLInputElement} */(document.getElementById('{{prefix}}target'));
          var searchBox = new google.maps.places.SearchBox(input);
          google.maps.event.addListener(searchBox, 'places_changed', function() {
      	    var places = searchBox.getPlaces();
      	    map.setCenter(places[0].geometry.location);
      	    map.setZoom({% if blockConfig.zoomOnAddress %}{{ blockConfig.zoomOnAddress }}{% else %}14{% endif %});
    
      	  });
          google.maps.event.addListener(map, 'bounds_changed', function() {
      	    var bounds = map.getBounds();
      	    searchBox.setBounds(bounds);
      	  });
      {% endif %}
      var usedMarkers=[ ];
      var markerCluster = new MarkerClusterer(map, usedMarkers,{batchSize:20000,averageCenter:false,gridSize:60,batchSizeIE:20000});
      markerCluster.setCalculator(function (a,b){
          var total=0;
          for(var i= 0; i < a.length; i++)
			{
			     total=total+a[i].count;
			}
          for(var c=0,f=total,g=f;g!==0;)
              g=parseInt(g/10,10),c++;
          c=Math.min(c,b);
          return{text:f,index:c}
          });
      var useLocation = "{{blockConfig.useLocation}}";
      var centerAddress = "{{blockConfig.centerAddress}}";
      var centerLatitude = "{{blockConfig.centerLatitude}}";
      var centerLongitude = "{{blockConfig.centerLongitude}}";
      var activateSearch = {% if blockConfig.activateSearch %}true{% else %}false{% endif %};
      var showCenterMarker = {% if blockConfig.showCenterMarker %}true{% else %}false{% endif %};
      var predefinedFacets = {% if blockConfig.predefinedFacets%}"{{blockConfig.predefinedFacets| e('js')}}"{% else %}"{ }"{% endif %} ;
      var displayedFacets = {% if blockConfig.displayedFacets%}"{{blockConfig.displayedFacets|json_encode()| e('js')}}"{% else %}"[ ]"{% endif %} ;
      var displayMode = {% if blockConfig.displayMode %}"{{blockConfig.displayMode}}"{% else %}"standard"{% endif %} ;
      displayedFacets=JSON.parse(displayedFacets);
      var facetOverrides = {% if blockConfig.facetOverrides%}"{{blockConfig.facetOverrides| e('js')}}"{% else %}"[ ]"{% endif %} ;
      var pagesize = {{blockConfig.pageSize}};
	  if (useLocation&&navigator.geolocation) {
		  navigator.geolocation.getCurrentPosition(function(position) {
		      var initialLocation = new google.maps.LatLng(position.coords.latitude,position.coords.longitude);
		      map.setCenter(initialLocation);
		      if (showCenterMarker){new google.maps.Marker({
			  	map:map,
			  	icon:"/templates/root/img/target.png",
			  	position:initialLocation
			      });}
		    }, function() {
		      console.log("geolocation Error");
		    });
		  
      } else if (centerAddress) {
      	
      	geocoder.geocode( { 'address': centerAddress}, function(results, status) {
      		if (status == google.maps.GeocoderStatus.OK) {
      			map.setCenter(results[0].geometry.location);
      			if (showCenterMarker){
      			new google.maps.Marker({
    			  	map:map,
    			  	icon:"/templates/root/img/target.png",
    			  	position:results[0].geometry.location
    			      });
      			}
      		}
      	});
      } else if (centerLatitude&&centerLongitude){
    	  map.setCenter(new google.maps.LatLng(centerLatitude, centerLongitude));  
    	  if (showCenterMarker){new google.maps.Marker({
			  	map:map,
			  	icon:"/templates/root/img/target.png",
			  	position:new google.maps.LatLng(centerLatitude, centerLongitude)
			      });   }   
      }
	  var mapTimer=null;
	  google.maps.event.addListener(map, 'bounds_changed', function() {
		  clearTimeout(mapTimer);
		  mapTimer=setTimeout(function(){
			fetchData();
		  },300);
      });
      window.activeFacets={ };
	  
	  var oldPositions=[ ];
	  var newPositions=[ ];
	  window.fireQuery=fetchData;
      function fetchData (){
    	  var bounds=map.getBounds();
          var params={
    				'current-page':jQuery('body').attr('data-current-page'),
    				'pagesize':pagesize,
    				'constrainToSite':{% if blockConfig.constrainToSite%}true{% else %}false{% endif %} ,
    				'predefinedFacets':predefinedFacets,
    				'displayedFacets':displayedFacets,
    				'facetOverrides':facetOverrides,
    				'inflat': bounds.getSouthWest().lat(),
    				'suplat': bounds.getNorthEast().lat(),	
    				'inflon': bounds.getSouthWest().lng(),
    				'suplon': bounds.getNorthEast().lng(),
    				'displayMode':displayMode,
    				'autoComplete':{% if blockConfig.autoComplete%}true{% else %}false{% endif %} ,
    			}
          var currentFacets=window.activeFacets;
          for (var attrname in currentFacets) { params[attrname] = currentFacets[attrname]; }
    	  var request = jQuery.ajax({
    			url : window.location.protocol+'//'+window.location.host+ '/blocks/geo-search/xhr-search',
    			type : "POST",
    			data :params,
    			dataType : "json"
    		});

    		request.done(function(data) {
        		oldPositions=[ ];
        		newPositions=[ ];
    			for(var j= 0; j < usedMarkers.length; j++)
    			{
    			     oldPositions.push(usedMarkers[j].entityId);
    			}
        		//console.log(data);
        		var recievedFacets=data.activeFacets;
        		window.activeFacets={ };
        		for(var m= 0; m < recievedFacets.length; m++)
    			{
    			     if ((recievedFacets[m].id=="author")||(recievedFacets[m].id=="date")){
    			    	 window.activeFacets[recievedFacets[m].id]=recievedFacets[m].terms[0].term;
        			 } else {
            			 var intermed=[ ];
        				 for(var p= 0; p < recievedFacets[m].terms.length; p++)
	     	    			{
        					 intermed.push(recievedFacets[m].terms[p].term);
	     	    			}
        				 window.activeFacets[recievedFacets[m].id]=intermed;

            		 } 
        			 //implement multi term here
    			} if (activateSearch) {
        		jQuery("#facetBox").replaceWith(data.facetsHtml);
        		jQuery("#activeFacetBox").replaceWith(data.activeFacetsHtml);
    			}
        		var rezArray=data.data;
    			for(var i= 0; i < rezArray.length; i++)
    			{
    			     handleContent(rezArray[i].position_location,rezArray[i].title,rezArray[i].id,rezArray[i].idArray,rezArray[i].count);
    			}
    			var newUsed=[];
    			for(var u= 0; u < usedMarkers.length; u++)
    			{
    			     if (newPositions.indexOf(usedMarkers[u].entityId)==-1){
    			    	 markerCluster.removeMarker(usedMarkers[u],true);
    			    	 usedMarkers[u].setMap(null);
    			    	 //console.log("removed old");
        			 } else {
            			 newUsed.push(usedMarkers[u]);
            		 }
    			}
    			usedMarkers=[ ];
    			usedMarkers=newUsed;
    			markerCluster.repaint();
    			jQuery('.facetCheckbox').click(function(){
        			if(jQuery(this).prop("checked")){
        				window.updateFacets(jQuery(this).attr("data-facet-id"),jQuery(this).attr("data-facet-term"),true);
            		} else {
            			window.updateFacets(jQuery(this).attr("data-facet-id"),jQuery(this).attr("data-facet-term"),false);
                	}
        			})
        			$('.typeahead').typeahead({
	    source: function (query, process) {
			var request = jQuery.ajax({
				url : '/blocks/geosearch/xhr-get-suggests',
				type : "POST",
				data : {
					'query': query,
					'current-page':jQuery('body').attr('data-current-page'),
					'searchParams': jQuery('#searchpage').attr('data-searchparams')
				},
				dataType : "json"
			});
			request.done(function(data) {
				return process(data.terms);
			});
			
	    },
	    matcher: function() {
	    	return true;
	    },
	    items:10,
	    minLength:3
	})
    			//console.log("data fetch done");
    		});

    		request.fail(function(jqXHR, textStatus) {
        		console.log("failed to fetch data");
    		});
      }
      window.updateFacets=updateFacets;
      function updateFacets(id,term,add){
          if ((id=="author")||(id=="date")||(id=="query")){
              
	          if (add){
	        	  window.activeFacets[id]=term;
	          } else {
				  delete window.activeFacets[id];
	          }
          } else {
        	  if (add){
            	  if (Array.isArray(window.activeFacets[id])){
					  if (window.activeFacets[id].indexOf(term)==-1){
						  window.activeFacets[id].push(term);
					  }
                  } else {
                	  window.activeFacets[id]=new Array(term);
                  }
	        	  
	          } else {
		          if (window.activeFacets[id].length==1){
				  	delete window.activeFacets[id];
		          } else {
			        var myInterIndex=window.activeFacets[id].indexOf(term);
			        window.activeFacets[id].splice(myInterIndex,1);
			      }
	          }
          }
          window.fireQuery();
      }
	  
      function handleContent(contentPosition, title,entityId,idArray,count){
    	  contentPosition=contentPosition.split(",");
    	   if (contentPosition[0]&&contentPosition[1]){
    		  createContentMarker(new google.maps.LatLng(contentPosition[0],contentPosition[1]), title,entityId,idArray,count);     
          }
      }
      var activeInfoWindows=[ ];
      function createContentMarker(location,title,entityId,idArray,count){
    	  	  newPositions.push(entityId);
    	  	  if (oldPositions.indexOf(entityId)==-1){
	    	  var marker = new google.maps.Marker({
				  	map:map,
				  	icon:"/templates/root/img/map_pin.png",
				  	position:location,
				  	title:""+title,
				  	//labelContent:count,
				  	//labelAnchor: new google.maps.Point(3, 31),
				  	//labelStyle: {'color': "white",'font-weight': "bold", 'font-size': "12px"},
				  	count:count,
				  	entityId:entityId,
				  	idArray:idArray
			  });
			  usedMarkers.push(marker);
		      markerCluster.addMarker(marker,true);
				
			  //console.log("added new");
			  
	    	  
	    	  google.maps.event.addListener(marker, 'click', function() {
	    		  for(var p= 0; p < activeInfoWindows.length; p++)
	    			{
	    			  activeInfoWindows[p].close();
	    			}
	    		  activeInfoWindows=[];
	    		  var request2 = jQuery.ajax({
		      			url : window.location.protocol+'//'+window.location.host + '/blocks/geo-search/xhr-get-detail',
		      			type : "POST",
		      			data :{
		      				'current-page':jQuery('body').attr('data-current-page'),
							'idArray':marker.idArray
			      			},
		      			dataType : "json"
		      		});

		      		request2.done(function(data) {
			      		//console.log(data);
		      			var infowindow = new google.maps.InfoWindow({
				              content: data.data				                     
				           });
			    		  
			    		  activeInfoWindows.push(infowindow);
			              infowindow.open(map,marker);
		          		
		      		});

		      		request2.fail(function(jqXHR, textStatus) {
		          		console.log("failed to fetch detail");
		      		});
		        
	    		  
	    		  
	          });
    	  	  }
          
		  
      }
      
      }
     
      window.onload = initialize;

      function placeField() {
          var mapCanvasWidth = document.getElementById("{{prefix}}map_canvas").clientWidth;
          var fieldContainer = document.getElementById("{{prefix}}holderpanel");
          var field = document.getElementById("{{prefix}}target");
          
          if(mapCanvasWidth < 430) {
              var width = mapCanvasWidth - 35;
              
              fieldContainer.style.width = width+"px";
              fieldContainer.style.marginLeft = "35px";
    
              field.style.width = (width*0.7)+"px";
    
              var fieldMargin = ((mapCanvasWidth - field.clientWidth) / 2) - 35;
    
              if(fieldMargin > 0) {
          	      field.style.marginLeft = fieldMargin+"px";
              }
          } else {
        	  var width = mapCanvasWidth - 75;
        	  
        	  fieldContainer.style.width = width+"px";
        	  fieldContainer.style.marginLeft = "75px";
    
        	  field.style.width = (width*0.7)+"px";
    
        	  var fieldMargin = ((mapCanvasWidth - field.clientWidth) / 2) - 75;
    
        	  if(fieldMargin > 0) {
        	      field.style.marginLeft = fieldMargin+"px";
        	  }
          }
      }

      placeField();
      window.onresize = function() {
    	  placeField();
      };
</script>

<style type="text/css">
{% if blockConfig.showPlacesSearch %}
#{{prefix}}holderpanel {
    position: relative;
    bottom: -45px;
    z-index: 1;
}
#{{prefix}}map_canvas{
    bottom: 30px;
}{% endif %}
#{{prefix}}map_canvas img {
    max-width: none;
}
	  
</style>
{% endblock %}
