{% extends "root/block.html.twig" %}

{% block mainContent %}
{% if isLoggedIn %}
{%if query.type=="manual" or query.type=="simple"%}
<div id="list-editmode" class="hide">
	<div class="btn-group pull-left">
	<a class="btn" href="#" id="btn-add-content" onclick="createContentWindow('{{query.type}}','{{data[0].typeId}}','{{query.id}}')"> <i class="icon-plus-sign"></i>
	Ajouter un contenu
	</a>
	</div>
</div>
<div class="clearfix"></div>
{%endif%}
{%endif%}
<script type="text/javascript"
      src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCW31tpi5nYZPNDt82czNoXBpAc8N_rULQ&sensor=true">
    </script>
<script type="text/javascript">
      function initialize() {
    	  if (typeof google == "undefined") {
   		   var e = document.createElement("script");
   		   e.src = "https://maps.googleapis.com/maps/api/js?key=AIzaSyCW31tpi5nYZPNDt82czNoXBpAc8N_rULQ&sensor=true";
   		   e.type = "text/javascript";
   		   document.getElementsByTagName("head")[0].appendChild(e); 
   		}
          
        var mapOptions = {
          center: new google.maps.LatLng(48.8567, 2.3508),
          zoom: {{blockConfig.zoom}}||12,
          mapTypeId: google.maps.MapTypeId.ROADMAP
        };
        
      
      var map = new google.maps.Map(document.getElementById("{{prefix}}map_canvas"),
            mapOptions);
      var geocoder = new google.maps.Geocoder();
      var useLocation = "{{blockConfig.useLocation}}";
      var centerAddress = "{{blockConfig.centerAddress}}";
      var centerLatitude = "{{blockConfig.centerLatitude}}";
      var centerLongitude = "{{blockConfig.centerLongitude}}";
	  if (useLocation&&navigator.geolocation) {
		  navigator.geolocation.getCurrentPosition(function(position) {
		      var initialLocation = new google.maps.LatLng(position.coords.latitude,position.coords.longitude);
		      map.setCenter(initialLocation);
		      new google.maps.Marker({
			  	map:map,
			  	position:initialLocation
			      });
		    }, function() {
		      console.log("geolocation Error");
		    });
		  
      } else if (centerAddress) {
      	
      	geocoder.geocode( { 'address': centerAddress}, function(results, status) {
      		if (status == google.maps.GeocoderStatus.OK) {
      			map.setCenter(results[0].geometry.location);
      		}
      	});
      } else if (centerLatitude&&centerLongitude){
    	  map.setCenter(new google.maps.LatLng(centerLatitude, centerLongitude));        
      }
	  var mapTimer=null;
	  google.maps.event.addListener(map, 'bounds_changed', function() {
		  clearTimeout(mapTimer);
		  mapTimer=setTimeout(function(){
			fetchData();
		  },1000);
      });
      function fetchData (){
          var bounds=map.getBounds();
    	  var request = jQuery.ajax({
    			url : window.location.origin + '/blocks/google-maps/xhr-get-items',
    			type : "POST",
    			data : {
    				'query-id' : "{{blockConfig.query}}",
    				'current-page':jQuery('body').attr('data-current-page'),
    				'infLat':bounds.Z.b,
    				'supLat':bounds.Z.d,
    				'infLon':bounds.fa.b,
    				'supLon':bounds.fa.d,
    				'positionField':"{{blockConfig.positionField}}"
    			},
    			dataType : "json"
    		});

    		request.done(function(data) {
        		var rezArray=data.data;
    			for(var i= 0; i < rezArray.length; i++)
    			{
    			     handleContent(rezArray[i].position,rezArray[i].title,rezArray[i].summary);
    			}
    			console.log("data fetch done");
    		});

    		request.fail(function(jqXHR, textStatus) {
        		console.log("failed to fetch data");
    		});
      }
      
	  
      function handleContent(contentPosition, title, contentString){
    	  if (contentPosition.address){
    		  geocoder.geocode( { 'address': contentPosition.address}, function(results, status) {
    	      		if (status == google.maps.GeocoderStatus.OK) {
    	      			createContentMarker(results[0].geometry.location, title, contentString);
    	      		}
    	      	});  
    	  } else if (contentPosition.lat&&contentPosition.lon){
    		  createContentMarker(new google.maps.LatLng(contentPosition.lat,contentPosition.lng), title, contentString);     
          }
      }
      var usedMarkers=[ ];
      function createContentMarker(location,title,contentString){
          if (usedMarkers.indexOf(location.toString())==-1){
	    	  var marker = new google.maps.Marker({
				  	map:map,
				  	position:location,
				  	title:title
				});
			  usedMarkers.push(location.toString());
			  console.log("added new");
			  
	    	  var infowindow = new google.maps.InfoWindow({
	              content: contentString         
	           });
	    	  google.maps.event.addListener(marker, 'click', function() {
	              infowindow.open(map,marker);
	          });
          }
		  
      }
      
      }
     
      window.onload = initialize;
</script>
<div id="{{prefix}}map_canvas" style="height:{{blockConfig.height}}px;" class="row-fluid"></div>
<style type="text/css">
#{{prefix}}map_canvas img {
    max-width: none;
}	  
</style>

{% endblock %}
